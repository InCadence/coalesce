<?xml version="1.0" encoding="UTF-8" standalone="no"?><!--
  ~  Copyright 2017 - InCadence Strategic Solutions Inc., All Rights Reserved
  ~
  ~  Notwithstanding any contractor copyright notice, the Government has Unlimited
  ~  Rights in this work as defined by DFARS 252.227-7013 and 252.227-7014.  Use
  ~  of this work other than as specifically authorized by these DFARS Clauses may
  ~  violate Government rights in this work.
  ~
  ~  DFARS Clause reference: 252.227-7013 (a)(16) and 252.227-7014 (a)(16)
  ~  Unlimited Rights. The Government has the right to use, modify, reproduce,
  ~  perform, display, release or disclose this computer software and to have or
  ~  authorize others to do so.
  ~
  ~  Distribution Statement D. Distribution authorized to the Department of
  ~  Defense and U.S. DoD contractors only in support of U.S. DoD efforts.
  ~
  -->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:http="http://cxf.apache.org/transports/http/configuration"
           xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0                 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd                 http://cxf.apache.org/transports/http/configuration                 http://cxf.apache.org/schemas/configuration/http-conf.xsd      http://cxf.apache.org/blueprint/jaxrs      http://cxf.apache.org/schemas/blueprint/jaxrs.xsd">

    <jaxrs:server address="/oe" id="oe">
        <jaxrs:serviceBeans>
            <bean class="com.incadencecorp.oe.services.spider.controller.jaxrs.impl.SpiderControllerJaxRS">
                <argument>
                    <map>
                        <entry key="com.incadencecorp.oe.services.spider.controller.SpiderController.filter.path"
                               value="filter"/>
                    </map>
                </argument>
                <argument>
                    <ref component-id="executor"/>
                </argument>
                <property name="tika">
                    <ref component-id="tika"/>
                </property>
                <property name="NLP">
                    <ref component-id="nlp"/>
                </property>
            </bean>
            <ref component-id="content"/>
            <ref component-id="session"/>
            <ref component-id="tika"/>
            <ref component-id="nlp"/>
            <ref component-id="spiderResult"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.incadencecorp.coalesce.services.common.jaxrs.filters.NoCacheControlFilter"/>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider">
                <property name="mapper">
                    <bean class="com.incadencecorp.coalesce.services.api.mappers.CoalesceMapper">
                        <property name="serializationFeature">
                            <array>
                                <value>INDENT_OUTPUT</value>
                            </array>
                        </property>
                        <property name="mapperFeature">
                            <array>
                                <value>DEFAULT_VIEW_INCLUSION</value>
                            </array>
                        </property>
                    </bean>
                </property>
            </bean>
        </jaxrs:providers>
    </jaxrs:server>

    <bean class="com.incadencecorp.oe.services.spider.controller.jaxrs.impl.SpiderSessionControllerJaxRS"
          destroy-method="close" id="session" scope="singleton">
        <argument>
            <map>
                <entry key="com.incadencecorp.oe.services.spider.controller.SpiderSessionController.expire" value="5"/>
                <entry key="com.incadencecorp.oe.services.spider.controller.SpiderSessionController.max" value="2000"/>
                <entry key="com.incadencecorp.oe.services.spider.controller.SpiderController.filter.path" value="filter"/>
                <entry key="com.incadencecorp.oe.services.spider.controller.SpiderSessionController.drones.enabled"
                       value="false"/>
                <entry key="com.incadencecorp.oe.services.spider.controller.SpiderSessionController.drones.multithreaded"
                       value="true"/>
                <entry key="com.incadencecorp.oe.services.spider.controller.SpiderSessionController.drones.multithreaded.window"
                       value="4"/>
            </map>
        </argument>
        <argument>
            <bean class="java.util.concurrent.ScheduledThreadPoolExecutor">
                <argument value="300"/>
                <argument>
                    <bean class="com.incadencecorp.coalesce.framework.CoalesceThreadFactoryImpl"/>
                </argument>
            </bean>
        </argument>
        <property name="tika">
            <ref component-id="tika"/>
        </property>
        <property name="NLP">
            <ref component-id="nlp"/>
        </property>
        <property name="framework">
            <ref component-id="framework"/>
        </property>
    </bean>

    <bean class="com.incadencecorp.oe.services.spider.controller.jaxrs.impl.SpiderResultControllerJaxRS" id="spiderResult">
        <property name="crud" ref="crud-client"/>
        <property name="framework">
            <ref component-id="framework"/>
        </property>
    </bean>

    <bean class="mil.army.tradoc.tika.controller.jaxrs.impl.TikaControllerJaxRS" id="tika">
        <argument>
            <map>
                <entry key="mil.army.tradoc.tika.controller.TikaController" value="config/tika-config.xml"/>
            </map>
        </argument>
        <argument>
            <ref component-id="executor"/>
        </argument>
    </bean>

    <bean class="mil.army.tradoc.nlp.controller.jaxrs.impl.NLPControllerJaxRS" id="nlp">
        <argument>
            <map>
                <entry key="mil.army.tradoc.nlp.controller.Pipeline.id" value="1"/>
                <entry key="sutime.binder.1.xml" value="./config/nlp/Holidays_sutime.xml"/>
                <entry key="sutime.binder.1.pathtype" value="file"/>
                <entry key="ner.useSUTime" value="true"/>
                <entry key="ner.fine.regexner.mapping" value="./config/nlp/regexner.txt"/>
                <entry key="stopwords.path" value="./config/nlp/stopwords.txt"/>
                <entry key="maxNgrams" value="1"/>
                <entry key="useMultiwordNER" value="false"/>
                <entry key="isProcessed" value="true"/>
                <entry key="timeout" value="30000"/>
            </map>
        </argument>
        <property name="subscriber">
            <bean class="com.incadencecorp.coalesce.notification.adminevent.impl.AdminEventSubscriber"/>
        </property>
        <property name="pipelines">
            <array>
                <map>
                    <entry key="mil.army.tradoc.nlp.controller.Pipeline.id" value="2"/>
                    <entry key="maxNgrams" value="2"/>
                    <entry key="isProcessed" value="false"/>
                    <entry key="timeout" value="0"/>
                </map>
                <map>
                    <entry key="mil.army.tradoc.nlp.controller.Pipeline.id" value="3"/>
                    <entry key="maxNgrams" value="3"/>
                    <entry key="isProcessed" value="true"/>
                    <entry key="timeout" value="0"/>
                </map>
            </array>
        </property>
    </bean>

    <bean class="com.incadencecorp.oe.services.content.filesystem.jaxrs.impl.FilesystemControllerJaxRS" id="content">
        <property name="framework">
            <ref component-id="framework"/>
        </property>
        <property name="configuration">
            <map>
                <entry key="attachment-memory-threshold" value="404800"/>
                <entry key="attachment-max-size" value="204800000"/>
            </map>
        </property>
        <property name="properties">
            <map>
                <entry key="com.incadencecorp.oe.services.content.filesystem.FilesystemController.directory" value="buckets"/>
            </map>
        </property>
    </bean>

    <bean class="java.util.concurrent.ScheduledThreadPoolExecutor" id="executor">
        <argument value="300"/>
        <argument>
            <bean class="com.incadencecorp.coalesce.framework.CoalesceThreadFactoryImpl"/>
        </argument>
    </bean>

    <bean class="com.incadencecorp.coalesce.services.crud.service.client.CrudFrameworkClientImpl" id="crud-client">
        <argument ref="framework"/>
    </bean>

    <bean class="com.incadencecorp.coalesce.search.CoalesceSearchFramework" id="framework">
        <property name="authoritativePersistor" ref="persister"/>
        <property name="coalesceTemplateUtil" ref="template"/>
    </bean>

    <!-- ========================== -->
    <!-- Persisters -->
    <!-- ========================== -->

    <bean id="persister" class="com.incadencecorp.coalesce.framework.persistance.elasticsearch.ElasticSearchPersistorSearch">
        <argument>
            <map>
                <entry key="elastic.isAuthoritative" value="true"/>
                <entry key="elastic.clustername" value="elasticsearch"/>
                <entry key="elastic.hosts" value="host.docker.internal:9300"/>
                <entry key="elastic.http.host" value="host.docker.internal"/>
                <entry key="elastic.http.port" value="9200"/>
                <entry key="elastic.datastore.cache.enabled" value="false"/>
                <entry key="ssl.enabled" value="false"/>
                <entry key="ssl.reject_unauthorized" value="true"/>
            </map>
        </argument>
    </bean>

    <bean class="com.incadencecorp.coalesce.framework.persistance.FilePersistorImpl" id="template"/>

    <bean class="com.incadencecorp.unity.common.connectors.FilePropertyConnector" id="connector"/>

</blueprint>
