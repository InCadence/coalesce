<!-- Copyright 2017 - InCadence Strategic Solutions Inc., All Rights Reserved
	Notwithstanding any contractor copyright notice, the Government has Unlimited
	Rights in this work as defined by DFARS 252.227-7013 and 252.227-7014. Use
	of this work other than as specifically authorized by these DFARS Clauses
	may violate Government rights in this work. DFARS Clause reference: 252.227-7013
	(a)(16) and 252.227-7014 (a)(16) Unlimited Rights. The Government has the
	right to use, modify, reproduce, perform, display, release or disclose this
	computer software and to have or authorize others to do so. Distribution
	Statement D. Distribution authorized to the Department of Defense and U.S.
	DoD contractors only in support of U.S. DoD efforts. -->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
           xmlns:http="http://cxf.apache.org/transports/http/configuration"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0
                http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
                http://cxf.apache.org/transports/http/configuration
                http://cxf.apache.org/schemas/configuration/http-conf.xsd

 				http://cxf.apache.org/blueprint/jaxrs http://cxf.apache.org/schemas/blueprint/jaxrs.xsd">


    <!-- ========================== -->
    <!-- Endpoints -->
    <!-- ========================== -->
    <jaxrs:server address="/data" id="someRestService">
        <jaxrs:serviceBeans>
            <ref component-id="templateServiceImpl"/>
            <ref component-id="optionsServiceImpl"/>
            <ref component-id="searchServiceImpl"/>
            <ref component-id="enumerationImpl"/>
            <ref component-id="entityImpl"/>
            <ref component-id="networkImpl"/>
            <ref component-id="linkagesImpl"/>
        </jaxrs:serviceBeans>
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider">
                <property name="mapper">
                    <bean class="com.incadencecorp.coalesce.services.api.mappers.CoalesceMapper">
                        <property name="serializationFeature">
                            <array>
                                <value>INDENT_OUTPUT</value>
                            </array>
                        </property>
                        <property name="mapperFeature">
                            <array>
                                <value>DEFAULT_VIEW_INCLUSION</value>
                            </array>
                        </property>

                    </bean>
                </property>
            </bean>
        </jaxrs:providers>
    </jaxrs:server>

    <!-- ========================== -->
    <!-- Service Implementations -->
    <!-- ========================== -->

    <bean id="linkagesImpl" class="com.incadencecorp.coalesce.services.crud.service.data.jaxrs.LinkageDataControllerJaxRS">
        <argument ref="crud-client"/>
        <argument ref="framework"/>
    </bean>

    <bean id="networkImpl"
          class="com.incadencecorp.coalesce.services.network.controller.jaxrs.impl.NetworkControllerJaxRS">
    </bean>

    <bean id="enumerationImpl" class="com.incadencecorp.coalesce.services.common.jaxrs.EnumerationDataControllerJaxRS">
        <argument ref="framework"/>
    </bean>

    <bean id="entityImpl"
          class="com.incadencecorp.coalesce.services.crud.service.data.jaxrs.EntityDataControllerJaxRS">
        <argument ref="template"/>
        <argument ref="crud-client"/>
    </bean>

    <bean id="templateServiceImpl"
          class="com.incadencecorp.coalesce.services.search.service.data.jaxrs.TemplateDataControllerJaxRS">
        <argument>
            <bean class="com.incadencecorp.coalesce.framework.CoalesceFramework">
                <property name="authoritativePersistor" ref="template"/>
                <property name="secondaryPersistors">
                    <array>
                        <ref component-id="persister"/>
                    </array>
                </property>
                <property name="templates">
                    <array>
                        <value>0d7e02d1-e706-3f6e-b728-dae18bb9ac24</value>
                        <value>13654d11-ab3b-30a4-88c7-f795e4a5182d</value>
                        <value>688174ea-8753-3e56-9887-92dd733a048f</value>
                        <value>ac2a8881-2b19-39a7-aad3-adb956e3a4c5</value>
                        <value>c14e6701-65db-31f7-9836-0d00dafb4a9c</value>
                        <value>ee808337-5ac2-339f-b001-0842915b01e5</value>
                        <value>0d6d5362-f78b-3213-84c2-6997a270812d</value>
                    </array>
                </property>
            </bean>
        </argument>
    </bean>

    <bean id="optionsServiceImpl"
          class="com.incadencecorp.coalesce.services.search.service.data.jaxrs.OptionsDataControllerJaxRS">
    </bean>

    <bean id="searchServiceImpl"
          class="com.incadencecorp.coalesce.services.search.service.data.jaxrs.SearchDataControllerJaxRS">
        <argument ref="framework"/>
    </bean>

    <bean id="crud-client"
          class="com.incadencecorp.coalesce.services.crud.service.client.CrudFrameworkClientImpl">
        <argument ref="framework"/>
    </bean>

    <!-- ========================== -->
    <!-- Persisters -->
    <!-- ========================== -->
    <bean id="persister" class="com.incadencecorp.coalesce.framework.persistance.elasticsearch.ElasticSearchPersistorSearch" >
        <argument>
            <map>
                <entry key="elastic.isAuthoritative" value="true"/>
                <entry key="elastic.clustername" value="elasticsearch"/>
                <entry key="elastic.hosts" value="host.docker.internal:9300"/>
                <entry key="elastic.http.host" value="host.docker.internal"/>
                <entry key="elastic.http.port" value="9200"/>
                <entry key="elastic.datastore.cache.enabled" value="false"/>
                <entry key="ssl.enabled" value="false"/>
                <entry key="ssl.reject_unauthorized" value="true"/>
            </map>
        </argument>
    </bean>

    <bean class="com.incadencecorp.coalesce.framework.persistance.FilePersistorImpl" id="template"/>

    <!-- ========================== -->
    <!-- Framework -->
    <!-- ========================== -->
    <bean id="framework" class="com.incadencecorp.coalesce.search.CoalesceSearchFramework">
        <property name="authoritativePersistor" ref="persister"/>
    </bean>

</blueprint>
