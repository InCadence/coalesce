/*-----------------------------------------------------------------------------'
 Copyright 2017 - InCadence Strategic Solutions Inc., All Rights Reserved

 Notwithstanding any contractor copyright notice, the Government has Unlimited
 Rights in this work as defined by DFARS 252.227-7013 and 252.227-7014.  Use
 of this work other than as specifically authorized by these DFARS Clauses may
 violate Government rights in this work.

 DFARS Clause reference: 252.227-7013 (a)(16) and 252.227-7014 (a)(16)
 Unlimited Rights. The Government has the right to use, modify, reproduce,
 perform, display, release or disclose this computer software and to have or
 authorize others to do so.

 Distribution Statement D. Distribution authorized to the Department of
 Defense and U.S. DoD contractors only in support of U.S. DoD efforts.
 -----------------------------------------------------------------------------*/
#set ($name = $normalizer.normalize($entity.getName()))
package ${packagename_root}.${packagename_sub};
#set($imports = [])
#foreach($recordset in $recordsets)
	#if( $imports.add("${packagename_root}.api.records.I$normalizer.normalize($recordset.getName())Record") ) #end
	#if($recordset.getMaxRecords() != 1 && !$imports.contains( $import ) && $imports.add("java.util.List")) #end
#end
$imports.sort(null)
#foreach($import in $imports)
import ${import};
#end

/**
 * Generated on $entity.getDateCreated() by template2java
 * 
 * @author Coalesce
 */
public interface ${classname} {

#foreach($recordset in $recordsets)
#if($recordset.getMaxRecords() == 1)
	/**
	* @return the singleton record belong to $recordset.getName().
	*/
    I$normalizer.normalize($recordset.getName())Record get$normalizer.normalize($recordset.getName())Record();

	/**
	* Sets the singleton record belong to $recordset.getName(). Only the field's values are copied. History and other attributes are not.
	*/
    void set$normalizer.normalize($recordset.getName())Record(I$normalizer.normalize($recordset.getName())Record record);
    
#else
#set($recordset_name = "recordset_$normalizer.normalize($recordset.getName())")
	/**
	* @return a list of records belong to $recordset.getName().
	*/
    List<I$normalizer.normalize($recordset.getName())Record> get$normalizer.normalize($recordset.getName())Records();

	/**
	* @return a newly created record that has been added to $recordset.getName().
	*/
    I$normalizer.normalize($recordset.getName())Record add$normalizer.normalize($recordset.getName())Record();
    
	/**
	* @return the position of the record removed or -1 if the record was not found.
	*/
    int rmv$normalizer.normalize($recordset.getName())Record(I$normalizer.normalize($recordset.getName())Record record);

	/**
	* @return the position of the record removed or -1 if the record was not found.
	*/
    int rmv$normalizer.normalize($recordset.getName())Record(String key);
    
#end
#end
}